syntax = "proto3";

package wuprotos.atlas.rpc;

import "wuprotos/atlas/proto/ActiveBuffListProto.proto";
message ChamberPlayerState {
	// ref: Atlas.Rpc.ChamberPlayerState/StateOneofCase

	// ref: Atlas.Rpc.ChamberPlayerState/Types/PlayerInProgressState/StatusOneofCase

	// ref: Atlas.Rpc.ChamberPlayerState/Types/PlayerInProgressState/Types/Healthy
	message Healthy {
		int64 hp = 1;
		bytes engaged_mob_id = 2;
	}

	// ref: Atlas.Rpc.ChamberPlayerState/Types/PlayerInProgressState/Types/KnockedOut
	message KnockedOut {
		int64 knockout_time_ms = 1;
		int64 recovery_time_ms = 2;
	}

	// ref: Atlas.Rpc.ChamberPlayerState/Types/PlayerInProgressState/Types/MapAbility
	message MapAbility {
		string map_ability_gmt_id = 1;
		float radius = 2;
		int64 cooldown_ms = 3;
		int32 map_ability_level = 4;
	}

	// ref: Atlas.Rpc.ChamberPlayerState/Types/PlayerFinishedState
	message PlayerFinishedState {
		bool has_claimed_rewards = 1;
	}

	// ref: Atlas.Rpc.ChamberPlayerState/Types/PlayerInProgressState
	message PlayerInProgressState {
		// ref: Atlas.Rpc.ChamberPlayerState/Types/PlayerInProgressState/StatusOneofCase

		// ref: Atlas.Rpc.ChamberPlayerState/Types/PlayerInProgressState/Types/Healthy
		message Healthy {
			int64 hp = 1;
			bytes engaged_mob_id = 2;
		}

		// ref: Atlas.Rpc.ChamberPlayerState/Types/PlayerInProgressState/Types/KnockedOut
		message KnockedOut {
			int64 knockout_time_ms = 1;
			int64 recovery_time_ms = 2;
		}

		// ref: Atlas.Rpc.ChamberPlayerState/Types/PlayerInProgressState/Types/MapAbility
		message MapAbility {
			string map_ability_gmt_id = 1;
			float radius = 2;
			int64 cooldown_ms = 3;
			int32 map_ability_level = 4;
		}

		double latitude = 1;
		double longitude = 2;
		int64 max_hp = 5;
		repeated ChamberPlayerState.MapAbility map_abilities = 6;
		ChamberPlayerState.Healthy healthy = 7;
		ChamberPlayerState.KnockedOut knocked_out = 8;
		int32 focus = 9;
		int32 max_focus = 10;
	}

	// ref: Atlas.Rpc.ChamberPlayerState/Types/PlayerProfessionInfo
	message PlayerProfessionInfo {
		string profession_gmt_id = 1;
	}

	// ref: Atlas.Rpc.ChamberPlayerState/Types/PlayerWaitingState
	message PlayerWaitingState {
	}

	string nickname = 1;
	PlayerWaitingState waiting = 3;
	PlayerInProgressState in_progress = 4;
	PlayerFinishedState finished = 5;
	PlayerProfessionInfo profession_info = 6;
	wuprotos.atlas.proto.ActiveBuffListProto active_buff_list = 7;
}

